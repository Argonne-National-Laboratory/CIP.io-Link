[
  {
    "id": "1bbb83617feb5d61",
    "type": "subflow",
    "name": "CSMS 1.6",
    "info": "",
    "category": "",
    "in": [
      {
        "x": 60,
        "y": 40,
        "wires": [
          {
            "id": "70bfca444e38cb32"
          }
        ]
      }
    ],
    "out": [
      {
        "x": 980,
        "y": 100,
        "wires": [
          {
            "id": "0508b4312099eed7",
            "port": 0
          }
        ]
      },
      {
        "x": 980,
        "y": 160,
        "wires": [
          {
            "id": "f5e6a6b98ad89c35",
            "port": 0
          }
        ]
      },
      {
        "x": 990,
        "y": 220,
        "wires": [
          {
            "id": "8bd502e33fe2ee01",
            "port": 0
          },
          {
            "id": "36d20d6f10701b5e",
            "port": 0
          },
          {
            "id": "ba2cbe8ea7210112",
            "port": 0
          }
        ]
      }
    ],
    "env": [
      {
        "name": "CSMS_PORT",
        "type": "num",
        "value": "8863"
      },
      {
        "name": "CSMS_PATH",
        "type": "str",
        "value": "/ocpp"
      }
    ],
    "meta": {},
    "color": "#3FADB5",
    "outputLabels": [
      "OCPP Msg",
      "OCPP Logging",
      "SubFlow Debug"
    ],
    "icon": "font-awesome/fa-bolt"
  },
  {
    "id": "adad8cfed89e9a2e",
    "type": "group",
    "z": "1bbb83617feb5d61",
    "name": "Calculate Default Charging Profile",
    "style": {
      "stroke": "#ff3f3f",
      "fill": "#ffcf3f",
      "label": true,
      "color": "#000000"
    },
    "nodes": [
      "31cbb896896da083",
      "74558ab2bc828dd9",
      "277e1a6705982260",
      "317d216b8fa4f66a"
    ],
    "x": 664,
    "y": 759,
    "w": 462,
    "h": 122
  },
  {
    "id": "f6e1783b4f8d6029",
    "type": "group",
    "z": "1bbb83617feb5d61",
    "name": "Init/Reset Default SCM",
    "style": {
      "fill": "#c8e7a7",
      "label": true
    },
    "nodes": [
      "dcc4d675cbe95527",
      "b348b5858bbb69e9",
      "e892b41d16a803e6",
      "3d9889d0e7face61",
      "565b9e3d1ccde32e"
    ],
    "x": 674,
    "y": 439,
    "w": 592,
    "h": 122
  },
  {
    "id": "fac4518c226fbf0c",
    "type": "group",
    "z": "1bbb83617feb5d61",
    "name": "Modify StartTx with TxId",
    "style": {
      "fill": "#b797cf",
      "label": true,
      "stroke": "#ffff00",
      "color": "#001f60"
    },
    "nodes": [
      "e930a4053f3ebf38",
      "d5ea45e6cb0d7090",
      "20e60ae443b8c057",
      "7085c4e9b54ca5e5",
      "81b335ea88991f47",
      "05dc69bf9c191b85",
      "bc558f4221526ddb",
      "1a959d6556da3c19",
      "2b61a29bf378cb19",
      "0cf0b97d82a84f68",
      "36d20d6f10701b5e",
      "aa717d0237b2f9f2",
      "ba2cbe8ea7210112",
      "8dd31db647e97e9a",
      "411ae61eb2d066f8"
    ],
    "x": 664,
    "y": 579,
    "w": 1162,
    "h": 202
  },
  {
    "id": "e254737171de6271",
    "type": "ocpp-remotej-cp",
    "z": "1bbb83617feb5d61",
    "name": "",
    "cbId": "evsesim1",
    "ocppver": "1.6j"
  },
  {
    "id": "8dd31db647e97e9a",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "link out 39",
    "mode": "link",
    "links": [
      "2b61a29bf378cb19"
    ],
    "x": 1785,
    "y": 680,
    "wires": []
  },
  {
    "id": "ba2cbe8ea7210112",
    "type": "change",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "evse",
        "pt": "msg",
        "to": "{}",
        "tot": "json"
      },
      {
        "t": "set",
        "p": "evse.amps",
        "pt": "msg",
        "to": "$number(payload.amps)",
        "tot": "jsonata"
      },
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "payload2",
        "tot": "msg"
      },
      {
        "t": "delete",
        "p": "payload2",
        "pt": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1660,
    "y": 660,
    "wires": [
      [
        "8dd31db647e97e9a"
      ]
    ]
  },
  {
    "id": "aa717d0237b2f9f2",
    "type": "json",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "",
    "property": "payload",
    "action": "",
    "pretty": false,
    "x": 1510,
    "y": 660,
    "wires": [
      [
        "ba2cbe8ea7210112"
      ]
    ]
  },
  {
    "id": "36d20d6f10701b5e",
    "type": "redis-command",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "server": "0430675ed6c7cd83",
    "command": "GET",
    "name": "",
    "topic": "",
    "params": "[]",
    "paramsType": "json",
    "payloadType": "json",
    "block": false,
    "x": 1380,
    "y": 660,
    "wires": [
      [
        "aa717d0237b2f9f2"
      ]
    ]
  },
  {
    "id": "0cf0b97d82a84f68",
    "type": "change",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload2",
        "pt": "msg",
        "to": "payload",
        "tot": "msg"
      },
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "$join([\"evse:\",ocpp.chargeBoxIdentity])",
        "tot": "jsonata"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1220,
    "y": 660,
    "wires": [
      [
        "36d20d6f10701b5e"
      ]
    ]
  },
  {
    "id": "2b61a29bf378cb19",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "link in 2",
    "links": [
      "8dd31db647e97e9a"
    ],
    "x": 995,
    "y": 700,
    "wires": [
      [
        "05dc69bf9c191b85"
      ]
    ]
  },
  {
    "id": "317d216b8fa4f66a",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "g": "adad8cfed89e9a2e",
    "name": "link out 26",
    "mode": "return",
    "links": [],
    "x": 765,
    "y": 840,
    "wires": []
  },
  {
    "id": "1a959d6556da3c19",
    "type": "link call",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "SCM",
    "links": [],
    "linkType": "dynamic",
    "timeout": "30",
    "x": 1650,
    "y": 700,
    "wires": [
      []
    ]
  },
  {
    "id": "bc558f4221526ddb",
    "type": "function",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "function 6",
    "func": "const command = \"SCM\"\nconst reqMap = global.get(\"CSMS:Req_Map\");\n\n//default target\nmsg.target = \"CL_SCM\"\n\n// Override target\nif (reqMap.has(command)){\n    msg.target = reqMap.get(command)\n}\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1520,
    "y": 700,
    "wires": [
      [
        "1a959d6556da3c19"
      ]
    ]
  },
  {
    "id": "e930a4053f3ebf38",
    "type": "function",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "Auth/Start Tx",
    "func": "// function handles both Authorize and StartTransaction\n// This generate a unique TxId, as long as the function doesn't get called twice\n// within the same millisecond\n\n\n// defaults\nconst ACCEPTED = \"Accepted\"\nlet status = ACCEPTED\nlet tags = []\n\n// copy message for the enhanced message with TxId\nlet msg2 = RED.util.cloneMessage(msg)\n\nmsg2.payload = {\n    idTagInfo: {\n        status\n    }\n}\n\nif (msg.ocpp.command === \"StartTransaction\"){\n    msg2.payload.transactionId = generateUniqueId()\n    //msg.ocpp.command = 'StartTransactionEnhanced'\n    //msg.payload.command = msg.ocpp.command\n    msg2.ocpp.connectorId = msg.payload.data.connectorId || 1\n}\n\n\nlet freeVend = global.get(\"CSMS:FreeVend\") \n    \nif (! freeVend ){\n    tags = global.get(\"CSMS:Tags\")\n\n    const result = tags.find((tag) => tag.tagId === msg.payload.data.idTag)\n\n    if (result){\n        if (!result.enabled){\n            msg2.payload.idTagInfo.status = \"Blocked\"\n        }\n        else if (result.expdate){\n            let expDate = new Date(result.expdate)\n            expDate.setHours(23, 59, 59, 999); // Set to the end of the day\n            let currentDate = new Date()\n\n            if (currentDate > expDate){\n                msg2.payload.idTagInfo.status = \"Expired\"\n            }\n            else {\n                msg2.payload.idTagInfo.expiryDate = expDate.toISOString()\n            }\n        } \n    }\n    else {\n        msg2.payload.idTagInfo.status = \"Invalid\"\n    }\n\n    if (msg2.payload.idTagInfo.status !== ACCEPTED){\n        msg2.payload.transactionId = 0\n    }\n\n}\n\nlet data\n\nif(msg.ocpp.command == \"StartTransaction\"){\n    data = msg.payload.data\n    data.transactionId = msg2.payload.transactionId\n    data.status = msg2.payload.idTagInfo.status\n    const ts = new Date(data.timestamp)\n    msg.timestamp = ts.getTime()\n    msg.cbId = msg2.ocpp.chargeBoxIdentity\n    msg.msgFrom = \"CS\"\n    msg.payload = [2,msg2.ocpp.MessageId,\"StartTransactionEnhanced\",data]\n} else {\n    msg = null\n} \n\nreturn [msg2,msg];\n\n\nfunction generateUniqueId() {\n    // Return a positive 32bit Int as a random TxId\n    const isoTimestamp = new Date().toISOString();\n    // Create a Date object from the ISO timestamp string\n    const date = new Date(isoTimestamp);\n\n    // Get the timestamp in seconds since the Unix epoch\n    const timestampInSeconds = Math.floor(date.getTime() / 1000);\n\n    // Calculate offset to ensure positive value within 32-bit signed range\n    const offset = timestampInSeconds < 0 ? 2147483648 : 0;\n\n    // Convert to 32-bit signed integer and apply offset\n    const int32Timestamp = (timestampInSeconds + offset) | 0;\n\n    return int32Timestamp;\n}\n",
    "outputs": 2,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 810,
    "y": 660,
    "wires": [
      [
        "20e60ae443b8c057",
        "7085c4e9b54ca5e5"
      ],
      [
        "81b335ea88991f47"
      ]
    ]
  },
  {
    "id": "dcc4d675cbe95527",
    "type": "switch",
    "z": "1bbb83617feb5d61",
    "g": "f6e1783b4f8d6029",
    "name": "Send Initial/Final ChargeProfile",
    "property": "payload.data.status",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "Preparing",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "Available",
        "vt": "str"
      },
      {
        "t": "else"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 3,
    "x": 910,
    "y": 500,
    "wires": [
      [
        "b348b5858bbb69e9"
      ],
      [
        "b348b5858bbb69e9"
      ],
      [
        "e892b41d16a803e6"
      ]
    ]
  },
  {
    "id": "b348b5858bbb69e9",
    "type": "function",
    "z": "1bbb83617feb5d61",
    "g": "f6e1783b4f8d6029",
    "name": "Reset SCM",
    "func": "// Leave now if default SCM is not enabled\nconst enabled = global.get(\"SITE:EnableDefautlSCM\") || false\nif (false === enabled) return\n\nlet connectorId = 0\nlet cbId = msg.ocpp.chargeBoxIdentity\nlet amps = 6\n\nif (msg.payload.data.connectorId > 0){\n    connectorId = msg.payload.data.connectorId\n    msg.payload = {\n        command: \"SetChargingProfile\",\n        cbId,\n        data: {\n            connectorId,\n            csChargingProfiles: {\n              chargingProfileId: 1,\n              stackLevel: 1,\n              chargingProfilePurpose: \"TxDefaultProfile\",\n              chargingProfileKind: \"Absolute\",\n              chargingSchedule: {\n                chargingRateUnit: \"A\",\n                chargingSchedulePeriod: [\n                    {\n                        startPeriod: 0,\n                        limit: amps,\n                        numberPhases: 1\n                    }\n                ]\n              }  \n            }\n        }\n    }\n\n    return msg\n\n}\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1150,
    "y": 480,
    "wires": [
      [
        "3d9889d0e7face61"
      ]
    ]
  },
  {
    "id": "e892b41d16a803e6",
    "type": "function",
    "z": "1bbb83617feb5d61",
    "g": "f6e1783b4f8d6029",
    "name": "Do Nothing",
    "func": "msg.payload = `Got a status of ${msg.payload.data.status}`\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1150,
    "y": 520,
    "wires": [
      []
    ]
  },
  {
    "id": "20e60ae443b8c057",
    "type": "switch",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "StartTx Accepted",
    "property": "payload.idTagInfo.status",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "Accepted",
        "vt": "str"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "x": 1010,
    "y": 660,
    "wires": [
      [
        "0cf0b97d82a84f68"
      ]
    ]
  },
  {
    "id": "31cbb896896da083",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "g": "adad8cfed89e9a2e",
    "name": "CL_SCM",
    "links": [],
    "x": 705,
    "y": 800,
    "wires": [
      [
        "74558ab2bc828dd9",
        "317d216b8fa4f66a"
      ]
    ]
  },
  {
    "id": "3d9889d0e7face61",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "g": "f6e1783b4f8d6029",
    "name": "link out 27",
    "mode": "link",
    "links": [
      "8eb3b8e8db8b77c7"
    ],
    "x": 1225,
    "y": 480,
    "wires": []
  },
  {
    "id": "74558ab2bc828dd9",
    "type": "function",
    "z": "1bbb83617feb5d61",
    "g": "adad8cfed89e9a2e",
    "name": "Smart Charge Management Algorithm",
    "func": "const enabled = global.get(\"SITE:EnableDefautlSCM\") || false\nconst currentTx = global.get(\"CSMS:SESSIONS\") || []\nconst loadLimit = global.get(\"SITE:LoadLimit\")\n\n// Leave now if default SCM is not enabled\nif (false === enabled) return\n\nlet adjustment = 1\n\nlet potential = 0\n\ncurrentTx.forEach(function(sess) {\n    potential += sess.amps\n})\n\nif (potential > loadLimit){\n    // Calculate an adjustment %\n    adjustment = 1 - ((( (potential - loadLimit ) / potential ) * 100) / 100)\n}\n\ncurrentTx.forEach(function(sess) {\n    msg = {}\n    msg.payload = {\n        command: \"SetChargingProfile\",\n        cbId: sess.cbId,\n        data: {\n            connectorId: sess.connectorId,\n            csChargingProfiles: {\n              chargingProfileId: 1,\n              transactionId: sess.transactionId,\n              stackLevel: 1,\n              chargingProfilePurpose: \"TxProfile\",\n              chargingProfileKind: \"Absolute\",\n              chargingSchedule: {\n                startSchedule: new Date().toISOString(),\n                chargingRateUnit: \"A\",\n                chargingSchedulePeriod: [\n                    {\n                        startPeriod: 0,\n                        limit: sess.amps * adjustment,\n                        numberPhases: 1\n                    }\n                ]\n              }  \n            }\n        }\n    }\n    msg.potential = potential\n    msg.adjustment = adjustment\n    msg.loadLimit = loadLimit\n    node.send(msg)\n});\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 900,
    "y": 800,
    "wires": [
      [
        "277e1a6705982260"
      ]
    ]
  },
  {
    "id": "277e1a6705982260",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "g": "adad8cfed89e9a2e",
    "name": "link out 28",
    "mode": "link",
    "links": [
      "8eb3b8e8db8b77c7",
      "8bd502e33fe2ee01"
    ],
    "x": 1085,
    "y": 800,
    "wires": []
  },
  {
    "id": "05dc69bf9c191b85",
    "type": "function",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "Save sessions context",
    "func": "if (msg.ocpp.command === \"StartTransaction\"){\n    let session = {}\n    session.cbId = msg.ocpp.chargeBoxIdentity\n    session.connectorId = msg.ocpp.connectorId\n    session.transactionId = msg.payload.transactionId\n    session.amps = msg.evse.amps\n    let sessions = global.get(\"CSMS:SESSIONS\") || []\n    sessions.push(session)\n    global.set(\"CSMS:SESSIONS\",sessions)\n    return msg;\n}",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1140,
    "y": 700,
    "wires": [
      [
        "bc558f4221526ddb"
      ]
    ]
  },
  {
    "id": "7085c4e9b54ca5e5",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "link out 31",
    "mode": "return",
    "links": [],
    "x": 915,
    "y": 620,
    "wires": []
  },
  {
    "id": "81b335ea88991f47",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "link out 33",
    "mode": "link",
    "links": [
      "f5e6a6b98ad89c35"
    ],
    "x": 925,
    "y": 700,
    "wires": []
  },
  {
    "id": "d5ea45e6cb0d7090",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "name": "CL_Auth_StartTx",
    "links": [],
    "x": 705,
    "y": 660,
    "wires": [
      [
        "e930a4053f3ebf38"
      ]
    ]
  },
  {
    "id": "565b9e3d1ccde32e",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "g": "f6e1783b4f8d6029",
    "name": "CL_SetTxDefaultProfile",
    "links": [
      "dec2c34e2f47883d"
    ],
    "x": 715,
    "y": 500,
    "wires": [
      [
        "dcc4d675cbe95527"
      ]
    ]
  },
  {
    "id": "0b35c35ff6b34816",
    "type": "CS server",
    "z": "1bbb83617feb5d61",
    "name": "CSMS Server",
    "port": "CIPIO_CSMS_PORT",
    "portType": "env",
    "enabled15": false,
    "path15": "/ocpp15s",
    "enabled16": false,
    "path16": "/ocpp16s",
    "enabled16j": true,
    "path16j": "${CIPIO_CSMS_PATH}",
    "log": false,
    "pathlog": "c:\\tmp\\OCPP__.log",
    "x": 110,
    "y": 280,
    "wires": [
      [
        "29ecf3de64707bd2",
        "7b10cc4aa964564d"
      ],
      [
        "b53020c58b6c45a9"
      ]
    ]
  },
  {
    "id": "fb654b19a6a965cd",
    "type": "server response",
    "z": "1bbb83617feb5d61",
    "name": "",
    "x": 980,
    "y": 280,
    "wires": []
  },
  {
    "id": "70bfca444e38cb32",
    "type": "CS request JSON",
    "z": "1bbb83617feb5d61",
    "name": "CS Req evse-001",
    "remotecb": "e254737171de6271",
    "command": "GetConfiguration",
    "cmddata": "",
    "log": true,
    "pathlog": "",
    "x": 250,
    "y": 40,
    "wires": [
      [
        "4a497f3abebf77a4"
      ]
    ]
  },
  {
    "id": "3c84a4a19698b6e3",
    "type": "comment",
    "z": "1bbb83617feb5d61",
    "name": "Basic OCPP Central System Server and supporting nodes",
    "info": "Change the port address and paths to meet your needs.\nThis is a very basic (does represent a fully functional CS) example",
    "x": 271,
    "y": 135,
    "wires": []
  },
  {
    "id": "1013277df36e9c6b",
    "type": "comment",
    "z": "1bbb83617feb5d61",
    "name": "Log all incoming msgs",
    "info": "",
    "x": 120,
    "y": 340,
    "wires": []
  },
  {
    "id": "79545bf715d76089",
    "type": "comment",
    "z": "1bbb83617feb5d61",
    "name": "Example with JSON 1.6",
    "info": "Keep in mind that some of the basic CS responses vary depending on OCPP 1.5 vs 1.6",
    "x": 231,
    "y": 175,
    "wires": []
  },
  {
    "id": "8eb3b8e8db8b77c7",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "name": "Send OCPP CMD",
    "links": [
      "3d9889d0e7face61",
      "277e1a6705982260",
      "999d9205e0499c3c"
    ],
    "x": 75,
    "y": 100,
    "wires": [
      [
        "70bfca444e38cb32"
      ]
    ]
  },
  {
    "id": "8bd502e33fe2ee01",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "name": "Send Debug Output",
    "links": [
      "277e1a6705982260"
    ],
    "x": 825,
    "y": 220,
    "wires": [
      []
    ]
  },
  {
    "id": "29b7e74ff8279110",
    "type": "function",
    "z": "1bbb83617feb5d61",
    "name": "BootNotification",
    "func": "//Load defaults\nconst interval = global.get(\"CSMS:HeartBeatInterval\") ?? 120\nconst currentTime = new Date().toISOString()\nconst validEVSEs = global.get(\"CSMS:EVSEs\") ?? []\n\nlet status = (validEVSEs.find((cbId) => cbId === msg.ocpp.chargeBoxIdentity) != undefined) ? \"Accepted\" : \"Rejected\"\n\n\nmsg.payload = {\n    interval,\n    currentTime,\n    status\n}\nreturn msg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 180,
    "y": 520,
    "wires": [
      [
        "e09d8995ecbe67f7",
        "a3ed9085610d4b68"
      ]
    ]
  },
  {
    "id": "041c7cd4a35efa4d",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "name": "Server Response Node",
    "links": [
      "fb6d59603b2b3beb"
    ],
    "x": 825,
    "y": 280,
    "wires": [
      [
        "fb654b19a6a965cd"
      ]
    ]
  },
  {
    "id": "e09d8995ecbe67f7",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "name": "link out 30",
    "mode": "return",
    "links": [],
    "x": 285,
    "y": 520,
    "wires": []
  },
  {
    "id": "f5e6a6b98ad89c35",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "name": "OCPP Logging Port",
    "links": [
      "81b335ea88991f47",
      "b53020c58b6c45a9"
    ],
    "x": 825,
    "y": 160,
    "wires": [
      []
    ]
  },
  {
    "id": "b53020c58b6c45a9",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "name": "link out 32",
    "mode": "link",
    "links": [
      "f5e6a6b98ad89c35"
    ],
    "x": 275,
    "y": 340,
    "wires": []
  },
  {
    "id": "0508b4312099eed7",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "name": "OCPP Msg Port",
    "links": [
      "29ecf3de64707bd2",
      "4a497f3abebf77a4"
    ],
    "x": 825,
    "y": 100,
    "wires": [
      []
    ]
  },
  {
    "id": "29ecf3de64707bd2",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "name": "link out 34",
    "mode": "link",
    "links": [
      "0508b4312099eed7"
    ],
    "x": 275,
    "y": 220,
    "wires": []
  },
  {
    "id": "4a497f3abebf77a4",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "name": "link out 35",
    "mode": "link",
    "links": [
      "0508b4312099eed7"
    ],
    "x": 405,
    "y": 40,
    "wires": []
  },
  {
    "id": "50d2e6f3bb1e94f5",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "name": "CL_BootNotification",
    "links": [],
    "x": 55,
    "y": 520,
    "wires": [
      [
        "29b7e74ff8279110"
      ]
    ]
  },
  {
    "id": "58a508d07089ac02",
    "type": "change",
    "z": "1bbb83617feb5d61",
    "name": "Heartbeat",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "{}",
        "tot": "json"
      },
      {
        "t": "set",
        "p": "payload.currentTime",
        "pt": "msg",
        "to": "$now()",
        "tot": "jsonata"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 160,
    "y": 560,
    "wires": [
      [
        "d363a59df51b1603"
      ]
    ]
  },
  {
    "id": "d363a59df51b1603",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "name": "link out 37",
    "mode": "return",
    "links": [],
    "x": 285,
    "y": 560,
    "wires": []
  },
  {
    "id": "26c6df27758d1898",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "name": "CL_Heartbeat",
    "links": [],
    "x": 55,
    "y": 560,
    "wires": [
      [
        "58a508d07089ac02"
      ]
    ]
  },
  {
    "id": "b109c9e3b6b4ef7a",
    "type": "change",
    "z": "1bbb83617feb5d61",
    "name": "StopTransaction",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "{\"idTagInfo\":{\"status\":\"Accepted\"}}",
        "tot": "json"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 180,
    "y": 620,
    "wires": [
      [
        "d822835855e62f28"
      ]
    ]
  },
  {
    "id": "c65873db62d0456e",
    "type": "function",
    "z": "1bbb83617feb5d61",
    "name": "Remove from active sessions",
    "func": "let sessions = global.get(\"CSMS:SESSIONS\") || []\nlet cbId = msg.ocpp.chargeBoxIdentity\nlet transactionId = msg.payload.data.transactionId\n\nlet updated_sessions = sessions.filter( sess => (sess.cbId == cbId && sess.transactionId == transactionId) == false)\nmsg = {\n    payload: {\n        updated_sessions,\n        cbId,\n        transactionId\n    }\n}\n\nglobal.set(\"CSMS:SESSIONS\", updated_sessions)\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 220,
    "y": 660,
    "wires": [
      [
        "bbed1bd5b44c8a60",
        "dbd002dc463b8de0"
      ]
    ]
  },
  {
    "id": "98a99004fba3ce97",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "name": "CL_StopTransaction",
    "links": [],
    "x": 55,
    "y": 660,
    "wires": [
      [
        "c65873db62d0456e",
        "b109c9e3b6b4ef7a"
      ]
    ]
  },
  {
    "id": "4df5bbe3dc069615",
    "type": "change",
    "z": "1bbb83617feb5d61",
    "name": "Generic Return",
    "rules": [
      {
        "t": "set",
        "p": "ocpp.data",
        "pt": "msg",
        "to": "payload.data",
        "tot": "msg"
      },
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "{}",
        "tot": "json"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 180,
    "y": 480,
    "wires": [
      [
        "f15df67d396f9ee3"
      ]
    ]
  },
  {
    "id": "20e77c4a2c2e1bc8",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "name": "CL_Generic",
    "links": [
      "dec2c34e2f47883d"
    ],
    "x": 55,
    "y": 480,
    "wires": [
      [
        "4df5bbe3dc069615"
      ]
    ]
  },
  {
    "id": "f15df67d396f9ee3",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "name": "link out 41",
    "mode": "return",
    "links": [],
    "x": 285,
    "y": 480,
    "wires": []
  },
  {
    "id": "d822835855e62f28",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "name": "link out 45",
    "mode": "return",
    "links": [],
    "x": 295,
    "y": 620,
    "wires": []
  },
  {
    "id": "7b10cc4aa964564d",
    "type": "function",
    "z": "1bbb83617feb5d61",
    "name": "Map Commands",
    "func": "if (msg?.payload?.command){\n    const reqMap = global.get(\"CSMS:Req_Map\");\n    const command = msg.payload.command\n\n    if (reqMap.has(command)){\n        msg.target = reqMap.get(command)\n    }\n    else {\n        msg.target = `CL_${command}`\n        switch(msg.payload.command){\n            case \"BootNotification\":\n                break;\n            case \"StatusNotification\":\n                break;\n            case \"Authorize\":\n            case \"StartTransaction\":\n                msg.target = \"CL_Auth_StartTx\"\n                break;\n            case \"StopTransaction\":\n                break;\n            case \"DataTransfer\":\n                break;\n            case \"Heartbeat\":\n                break;\n            case \"MeterValues\":\n            case \"FirmwareStatusNotification\":\n            case \"DiagnosticsStatusNotification\":\n                msg.target = \"CL_Generic\";\n                break;\n            default:\n                return;\n            break;\n        }\n    }\n    return msg;\n}\nelse {\n    return;\n}\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "// Code added here will be run once\n// whenever the node is started.\nconst reqMap = new Map()\nglobal.set(\"CSMS:Req_Map\",reqMap)",
    "finalize": "",
    "libs": [],
    "x": 360,
    "y": 280,
    "wires": [
      [
        "54b69c32249426ce"
      ]
    ]
  },
  {
    "id": "54b69c32249426ce",
    "type": "link call",
    "z": "1bbb83617feb5d61",
    "name": "",
    "links": [],
    "linkType": "dynamic",
    "timeout": "30",
    "x": 560,
    "y": 280,
    "wires": [
      [
        "fb6d59603b2b3beb"
      ]
    ]
  },
  {
    "id": "fb6d59603b2b3beb",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "name": "link out 16",
    "mode": "link",
    "links": [
      "041c7cd4a35efa4d"
    ],
    "x": 685,
    "y": 280,
    "wires": []
  },
  {
    "id": "120b3e12226d45fa",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "name": "CL_DataTransfer",
    "links": [],
    "x": 55,
    "y": 440,
    "wires": [
      [
        "bb8501896177294a"
      ]
    ]
  },
  {
    "id": "841bf57c5d32ad57",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "name": "link out 36",
    "mode": "return",
    "links": [],
    "x": 285,
    "y": 440,
    "wires": []
  },
  {
    "id": "bb8501896177294a",
    "type": "change",
    "z": "1bbb83617feb5d61",
    "name": "DataTransfer",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "{\"status\":\"Accepted\"}",
        "tot": "json"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 170,
    "y": 440,
    "wires": [
      [
        "841bf57c5d32ad57"
      ]
    ]
  },
  {
    "id": "d8c533dd612d0df0",
    "type": "link in",
    "z": "1bbb83617feb5d61",
    "name": "CL_StatusNotification",
    "links": [],
    "x": 65,
    "y": 780,
    "wires": [
      [
        "dec2c34e2f47883d"
      ]
    ]
  },
  {
    "id": "e855a16be03e78b3",
    "type": "comment",
    "z": "1bbb83617feb5d61",
    "name": "StatusNotification",
    "info": "",
    "x": 120,
    "y": 720,
    "wires": []
  },
  {
    "id": "b19a54056e36c12d",
    "type": "comment",
    "z": "1bbb83617feb5d61",
    "name": "Outputs",
    "info": "",
    "x": 850,
    "y": 60,
    "wires": []
  },
  {
    "id": "bbed1bd5b44c8a60",
    "type": "function",
    "z": "1bbb83617feb5d61",
    "name": "Get SCM node",
    "func": "const command = \"SCM\"\nconst reqMap = global.get(\"CSMS:Req_Map\") || new Map();\n\n//default target\nmsg.target = \"CL_SCM\"\n\n// Override target\nif (reqMap.has(command)){\n    msg.target = reqMap.get(command)\n}\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 440,
    "y": 660,
    "wires": [
      [
        "f6128d47522c0a77"
      ]
    ]
  },
  {
    "id": "f6128d47522c0a77",
    "type": "link call",
    "z": "1bbb83617feb5d61",
    "name": "SCM",
    "links": [],
    "linkType": "dynamic",
    "timeout": "30",
    "x": 590,
    "y": 660,
    "wires": [
      []
    ]
  },
  {
    "id": "80a77a8a82c0f361",
    "type": "comment",
    "z": "1bbb83617feb5d61",
    "name": "Default Request Responses",
    "info": "",
    "x": 160,
    "y": 400,
    "wires": []
  },
  {
    "id": "dec2c34e2f47883d",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "name": "link out 29",
    "mode": "link",
    "links": [
      "20e77c4a2c2e1bc8",
      "565b9e3d1ccde32e"
    ],
    "x": 145,
    "y": 780,
    "wires": []
  },
  {
    "id": "a3ed9085610d4b68",
    "type": "delay",
    "z": "1bbb83617feb5d61",
    "name": "",
    "pauseType": "delay",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 325,
    "y": 520,
    "wires": [
      [
        "ed4a4b99e2a754d0"
      ]
    ],
    "l": false
  },
  {
    "id": "ed4a4b99e2a754d0",
    "type": "function",
    "z": "1bbb83617feb5d61",
    "name": "Chg Config MVInterval",
    "func": "// This makes sure meter value intervals are set at bootup.\n// Only continue if the boot notification is accepted\n\nif (msg.payload.status != 'Accepted') return\n\nlet mvint = global.get(\"CSMS:MVSampleInterval\") || 61\n\nlet payload = {\n    cbId: msg.ocpp.chargeBoxIdentity,\n    command: \"ChangeConfiguration\",\n    data: {\n        key: \"MeterValueSampleInterval\",\n        value: `${mvint}`\n    }\n}\nmsg = { payload }\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 460,
    "y": 520,
    "wires": [
      [
        "999d9205e0499c3c"
      ]
    ]
  },
  {
    "id": "999d9205e0499c3c",
    "type": "link out",
    "z": "1bbb83617feb5d61",
    "name": "link out 56",
    "mode": "link",
    "links": [
      "8eb3b8e8db8b77c7"
    ],
    "x": 595,
    "y": 520,
    "wires": []
  },
  {
    "id": "411ae61eb2d066f8",
    "type": "redis-out",
    "z": "1bbb83617feb5d61",
    "g": "fac4518c226fbf0c",
    "server": "0430675ed6c7cd83",
    "command": "publish",
    "name": "",
    "topic": "csms:update:sessions",
    "obj": true,
    "x": 1360,
    "y": 740,
    "wires": []
  },
  {
    "id": "dbd002dc463b8de0",
    "type": "redis-out",
    "z": "1bbb83617feb5d61",
    "server": "0430675ed6c7cd83",
    "command": "publish",
    "name": "",
    "topic": "csms:update:sessions",
    "obj": true,
    "x": 460,
    "y": 700,
    "wires": []
  }
]