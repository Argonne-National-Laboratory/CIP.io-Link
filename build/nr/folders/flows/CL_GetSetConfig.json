[
  {
    "id": "68c0944e7f4deca9",
    "type": "tab",
    "label": "CL_GetSetConfig",
    "disabled": false,
    "locked": true,
    "info": "",
    "env": []
  },
  {
    "id": "250472edd0782156",
    "type": "ui-template",
    "z": "68c0944e7f4deca9",
    "group": "c04aff20955da79f",
    "page": "",
    "ui": "",
    "name": "",
    "order": 2,
    "width": 0,
    "height": 0,
    "head": "",
    "format": "<template>\n\n  <v-toolbar flat>\n    <v-toolbar-title class=\"text-grey\">\n        Actions\n    </v-toolbar-title>\n\n    <v-spacer></v-spacer>\n\n    <v-tooltip text=\"Refresh\" location=\"bottom\">\n        <template v-slot:activator=\"{ props }\">\n          <v-btn icon v-bind=\"props\" @click=\"send({action: 'refresh'})\">\n            <v-icon>mdi-refresh</v-icon>\n          </v-btn>\n        </template>\n    </v-tooltip>\n  </v-toolbar>\n    \n    <v-text-field\n        v-model=\"search\"\n        label=\"Search\"\n        prepend-inner-icon=\"mdi-magnify\"\n        variant=\"outlined\"\n        hide-details\n        single-line\n      ></v-text-field>\n\n    <v-data-table  \n            v-model:search=\"search\" \n            :items=\"msg?.payload?.data?.configurationKey\"\n            :headers=\"headers\"\n            :filter-keys='[\"key\",\"value\"]'\n            >\n\n      <template v-slot:item.actions=\"{ item }\">\n        <v-icon v-if=\"!item.readonly\"\n          class=\"me-2\"\n          size=\"small\"\n          @click=\"send({action: 'edit', payload: [item], cbId })\"\n        >\n          mdi-pencil\n        </v-icon>\n        <v-icon v-else\n          class=\"me-2\"\n          size=\"small\"\n          color=\"grey\"\n        >\n          mdi-pencil-off\n        </v-icon>        \n      </template>\n\n    </v-data-table>\n</template>\n\n<script>\n    export default {\n        data() {\n            // define variables available component-wide\n            // (in <template> and component functions)\n            return {\n                search: '',\n                headers: [\n                    {title: \"Key\", value: \"key\", sortable: true},\n                    {title: \"Value\", value: \"value\", sortable: true},\n                    { key: 'actions', title: 'Edit', align: 'end', \n                        sortRaw (a,b) {\n                            if (a.readonly && ( b.readonly == false) ) return 1;\n                            if (!a.readonly && b.readonly) return -1;\n                            return 0;\n                                                \n                        }                        \n                    }                    \n                ],\n                value: '',\n                cbId: 'unknown'\n            }\n        },\n        watch: {\n            // watch for any changes of \"count\"\n\n        },\n        computed: {\n\n        },\n        methods: {\n            \n        },\n        mounted() {\n            // code here when the component is first loaded\n            this.$socket.on('msg-input:' + this.id, (msg) => {\n                // do stuff with msg\n                // runs only when messages are received\n                //if (this.msg?.payload){\n                //    let payload = this.msg.payload\n                //    this.configKey = payload.key\n                //    this.configValue = payload.value\n                //}\n                if (this.msg?.ocpp) {\n                    this.cbId = this.msg.ocpp?.chargeBoxIdentity ?? \"ERROR\"\n                }\n            })\n        },\n        unmounted() {\n            // code here when the component is removed from the Dashboard\n            // i.e. when the user navigates away from the page\n        }\n    }\n\n//sortRaw: (a, b) {\n//                            if (a.readonly == b.readonly) return 0; \n//                            if (a.readonly > b.readonly) return 1;\n//                            if (a.readonly < b.readonly) return -1;\n//                        }\n\n\n</script>\n<style>\n    /* define any styles here - supports raw CSS */\n    .my-class {\n        color: red;\n    }\n    .headers {\n        font-weight: bold;\n    }\n    .ocppMsgReq {\n        color: blue;\n        font-weight: bold;\n    }\n    .ocppMsgRes {\n        color: blue;\n    }\n    .ocppMsgErr {\n        color: red;\n    }\n    .ocppCmdReq {\n        color: green;\n        font-weight: bold;\n    }\n    .ocppCmdRes {\n        color: DarkCyan;\n    }\n</style>\n\n",
    "storeOutMessages": true,
    "passthru": false,
    "resendOnRefresh": true,
    "templateScope": "local",
    "className": "",
    "x": 500,
    "y": 160,
    "wires": [
      [
        "a611c369ecc73876"
      ]
    ]
  },
  {
    "id": "6d40c15be6021ad7",
    "type": "link in",
    "z": "68c0944e7f4deca9",
    "name": "GetConfig",
    "links": [
      "b13502a9cfe6c685",
      "5358a0d2bbfaf7b3"
    ],
    "x": 265,
    "y": 160,
    "wires": [
      [
        "250472edd0782156",
        "72ce3ed5698f5660"
      ]
    ]
  },
  {
    "id": "72ce3ed5698f5660",
    "type": "debug",
    "z": "68c0944e7f4deca9",
    "name": "debug 38",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 500,
    "y": 200,
    "wires": []
  },
  {
    "id": "dadfc221f1661483",
    "type": "ui-template",
    "z": "68c0944e7f4deca9",
    "group": "c04aff20955da79f",
    "page": "",
    "ui": "",
    "name": "Edit Form",
    "order": 3,
    "width": "0",
    "height": "0",
    "head": "",
    "format": "<template>\n    <v-dialog width=\"auto\" v-model=\"showDialog\">\n        <v-card color=\"white\" v-click-outside=\"{handler: onClickOutside}\">\n            <v-toolbar color=\"primary\">\n                <v-card-title>\n                    <span>{{ title }} for {{ cbId }}</span>\n                </v-card-title>\n            </v-toolbar>\n            <v-container>\n                <v-text-field\n                    v-model=\"configKey\"\n                    label=\"Key\"\n                    type=\"text\"\n                    disabled\n                    min-width=50em\n                    hint=\"Config Key Name\"\n                ></v-text-field>\n                <v-text-field\n                    v-model=\"configValue\"\n                    label=\"Value\"\n                    type=\"text\"\n                ></v-text-field>\n\n                <v-card-actions class=\"justify-end\">\n                    <v-btn variant=\"elevated\" @click=\"okDialog\">{{ okText }}</v-btn>\n                    <v-btn variant=\"elevated\" @click=\"cancelDialog\">{{ cancelText }}</v-btn>\n                </v-card-actions>\n            </v-container>\n        </v-card>\n    </v-dialog>\n</template>\n\n<script>\n    export default {\n        data() {\n            // define variables available component-wide\n            // (in <template> and component functions)\n            return {\n                configKey: '',\n                configValue: '',\n                cbId: 'ERROR',\n                showDialog: false\n            }\n        },\n        watch: {\n            // watch for any changes of \"count\"\n        },    \n        computed: {\n            // automatically compute this variable\n            // whenever VueJS deems appropriate\n\n        },\n        methods: {\n            // expose a method to our <template> and Vue Application\n            sendconfigdata: function() {\n                this.send({\n                    payload: {\n                        key: this.configKey,\n                        value: this.configValue,\n                        cbId: this.cbId\n                    }\n                })\n            },\n            okDialog: function() {\n                this.sendconfigdata()\n                this.showDialog = false\n            },\n            cancelDialog: function() {\n                this.msg.payload = {}\n                this.showDialog = false\n            },\n            onClickOutside: function() {\n                this.msg.payload = {}\n                this.showDialog = false\n            },\n\n        },\n        mounted() {\n\n            this.$socket.on('msg-input:' + this.id, (msg) => {\n                // do stuff with msg\n                // runs only when messages are received\n                if (this.msg?.payload){\n                    let payload = this.msg.payload\n                    this.configKey = payload.key\n                    this.configValue = payload.value\n                    this.cbId = payload.cbId\n                }\n                if (this.msg?.dialog) {\n                    let dialog = this.msg.dialog\n                    this.okText = dialog.okText ?? \"OK\"\n                    this.cancelText = dialog.cancelText ?? \"Cancel\"\n                    this.showDialog = dialog.showDialog ?? false\n                    this.title = dialog.title ?? \"Edit Config Key\"\n                }\n            })\n                        \n        },\n        unmounted() {}\n   }\n</script>\n",
    "storeOutMessages": true,
    "passthru": false,
    "resendOnRefresh": true,
    "templateScope": "local",
    "className": "",
    "x": 500,
    "y": 80,
    "wires": [
      [
        "45d4b152cda7914e"
      ]
    ]
  },
  {
    "id": "9a3712f9d4ef4b3c",
    "type": "link in",
    "z": "68c0944e7f4deca9",
    "name": "Edit Config Item",
    "links": [
      "9dc7fde8212f4622"
    ],
    "x": 265,
    "y": 80,
    "wires": [
      [
        "dadfc221f1661483"
      ]
    ]
  },
  {
    "id": "9dc7fde8212f4622",
    "type": "link out",
    "z": "68c0944e7f4deca9",
    "name": "link out 24",
    "mode": "link",
    "links": [
      "9a3712f9d4ef4b3c"
    ],
    "x": 1115,
    "y": 200,
    "wires": []
  },
  {
    "id": "f06a407da6df4ef5",
    "type": "change",
    "z": "68c0944e7f4deca9",
    "name": "Add/Edit Dialog ",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "payload[0]",
        "tot": "msg"
      },
      {
        "t": "move",
        "p": "cbId",
        "pt": "msg",
        "to": "payload.cbId",
        "tot": "msg"
      },
      {
        "t": "set",
        "p": "dialog.showDialog",
        "pt": "msg",
        "to": "true",
        "tot": "bool"
      },
      {
        "t": "set",
        "p": "dialog.okText",
        "pt": "msg",
        "to": "Update",
        "tot": "str"
      },
      {
        "t": "set",
        "p": "dialog.cancelText",
        "pt": "msg",
        "to": "Cancel",
        "tot": "str"
      },
      {
        "t": "set",
        "p": "dialog.title",
        "pt": "msg",
        "to": "Edit Configuration",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 920,
    "y": 200,
    "wires": [
      [
        "9dc7fde8212f4622"
      ]
    ]
  },
  {
    "id": "45d4b152cda7914e",
    "type": "change",
    "z": "68c0944e7f4deca9",
    "name": "",
    "rules": [
      {
        "t": "move",
        "p": "payload",
        "pt": "msg",
        "to": "payload.data",
        "tot": "msg"
      },
      {
        "t": "set",
        "p": "payload.command",
        "pt": "msg",
        "to": "ChangeConfiguration",
        "tot": "str"
      },
      {
        "t": "move",
        "p": "payload.data.cbId",
        "pt": "msg",
        "to": "payload.cbId",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 680,
    "y": 80,
    "wires": [
      [
        "bf301b6e3cd5b7f3",
        "c333f56bd1abd4ca"
      ]
    ]
  },
  {
    "id": "bf301b6e3cd5b7f3",
    "type": "link out",
    "z": "68c0944e7f4deca9",
    "name": "link out 25",
    "mode": "link",
    "links": [
      "6ea73070a96d4eeb"
    ],
    "x": 1005,
    "y": 80,
    "wires": []
  },
  {
    "id": "16e438b3b8461c0a",
    "type": "function",
    "z": "68c0944e7f4deca9",
    "name": "Refresh GetConfig",
    "func": "let cbId = flow.get('CSMS:GetConfCBID')\n\nmsg.payload = {\n    \"command\": \"GetConfiguration\",\n    cbId,\n    \"data\": {\n        \"key\": []\n    }\n}\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 950,
    "y": 160,
    "wires": [
      [
        "bf301b6e3cd5b7f3"
      ]
    ]
  },
  {
    "id": "a611c369ecc73876",
    "type": "switch",
    "z": "68c0944e7f4deca9",
    "name": "",
    "property": "action",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "refresh",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "edit",
        "vt": "str"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 630,
    "y": 160,
    "wires": [
      [
        "16e438b3b8461c0a",
        "6cf5c9be715a7818"
      ],
      [
        "f06a407da6df4ef5"
      ]
    ]
  },
  {
    "id": "c333f56bd1abd4ca",
    "type": "delay",
    "z": "68c0944e7f4deca9",
    "name": "",
    "pauseType": "delay",
    "timeout": "2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 750,
    "y": 120,
    "wires": [
      [
        "16e438b3b8461c0a"
      ]
    ]
  },
  {
    "id": "8fd801d05bd71d61",
    "type": "redis-command",
    "z": "68c0944e7f4deca9",
    "server": "0430675ed6c7cd83",
    "command": "KEYS",
    "name": "",
    "topic": "",
    "params": "[]",
    "paramsType": "json",
    "payloadType": "json",
    "block": false,
    "x": 490,
    "y": 400,
    "wires": [
      [
        "8bf08fe2bc5b95ca"
      ]
    ]
  },
  {
    "id": "90710dfacc2327b0",
    "type": "function",
    "z": "68c0944e7f4deca9",
    "name": "Scan evse tags",
    "func": "msg = {}\nmsg.payload = \"evse:*\"\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 300,
    "y": 400,
    "wires": [
      [
        "8fd801d05bd71d61"
      ]
    ]
  },
  {
    "id": "a78f4a87347eb493",
    "type": "inject",
    "z": "68c0944e7f4deca9",
    "name": "",
    "props": [
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "3",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "x": 110,
    "y": 400,
    "wires": [
      [
        "90710dfacc2327b0"
      ]
    ]
  },
  {
    "id": "cd1d1bb073f40edd",
    "type": "debug",
    "z": "68c0944e7f4deca9",
    "name": "debug 57",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 1540,
    "y": 300,
    "wires": []
  },
  {
    "id": "effdcd024fba93d3",
    "type": "change",
    "z": "68c0944e7f4deca9",
    "name": "tags",
    "rules": [
      {
        "t": "set",
        "p": "ui_update.options",
        "pt": "msg",
        "to": "$map(payload,function($v,$i,$a){ $substringAfter($v, \":\")})",
        "tot": "jsonata"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1390,
    "y": 300,
    "wires": [
      [
        "cd1d1bb073f40edd"
      ]
    ]
  },
  {
    "id": "572385ddb0a2b809",
    "type": "function",
    "z": "68c0944e7f4deca9",
    "name": "Refresh GetConfig",
    "func": "const cbId = msg.payload\n\nmsg.payload = {\n    \"command\": \"GetConfiguration\",\n    \"cbId\": cbId,\n    \"data\": {\n        \"key\": []\n    }\n}\n\nflow.set('CSMS:GetConfCBID',cbId)\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 710,
    "y": 300,
    "wires": [
      [
        "76415b48f89bd6e0",
        "bf301b6e3cd5b7f3"
      ]
    ]
  },
  {
    "id": "76415b48f89bd6e0",
    "type": "debug",
    "z": "68c0944e7f4deca9",
    "name": "debug 58",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 900,
    "y": 300,
    "wires": []
  },
  {
    "id": "8bf08fe2bc5b95ca",
    "type": "redis-command",
    "z": "68c0944e7f4deca9",
    "server": "0430675ed6c7cd83",
    "command": "MGET",
    "name": "",
    "topic": "",
    "params": "[]",
    "paramsType": "json",
    "payloadType": "json",
    "block": false,
    "x": 670,
    "y": 400,
    "wires": [
      [
        "fedaf0f9550a6f4f"
      ]
    ]
  },
  {
    "id": "50b98c854d06dda8",
    "type": "debug",
    "z": "68c0944e7f4deca9",
    "name": "debug 83",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 1200,
    "y": 400,
    "wires": []
  },
  {
    "id": "fedaf0f9550a6f4f",
    "type": "function",
    "z": "68c0944e7f4deca9",
    "name": "function 26",
    "func": "let evses = []\nlet evse\nlet hb_int = global.get('CSMS:HeartbeatInterval') || 120\n\nmsg.payload.forEach(function (evse_str) {\n    evse = JSON.parse(evse_str)\n    if (Math.floor((Date.now() - evse.lastcommtime) / 1000) <= hb_int)  {\n        evses.push(evse.cbId)\n    }\n})\n\nevses = evses.sort((a, b) => {\n    const aLower = a.toLowerCase();\n    const bLower = b.toLowerCase();\n\n    if (aLower < bLower) {\n        return -1;\n    }\n    if (aLower > bLower) {\n        return 1;\n    }\n    return 0; // Equal\n});\n\n//msg.payload = evses;\nmsg.ui_update = {\n    options: evses\n}\nreturn msg;\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 850,
    "y": 400,
    "wires": [
      [
        "50b98c854d06dda8",
        "e009227e88c390b1"
      ]
    ]
  },
  {
    "id": "e009227e88c390b1",
    "type": "ui-dropdown",
    "z": "68c0944e7f4deca9",
    "group": "c04aff20955da79f",
    "name": "",
    "label": "Select Option:",
    "tooltip": "",
    "order": 1,
    "width": 0,
    "height": 0,
    "passthru": false,
    "multiple": false,
    "chips": false,
    "clearable": false,
    "options": [
      {
        "label": "",
        "value": "",
        "type": "str"
      }
    ],
    "payload": "",
    "topic": "topic",
    "topicType": "msg",
    "className": "",
    "typeIsComboBox": true,
    "msgTrigger": "onChange",
    "x": 400,
    "y": 260,
    "wires": [
      [
        "572385ddb0a2b809",
        "6cf5c9be715a7818"
      ]
    ]
  },
  {
    "id": "6cf5c9be715a7818",
    "type": "change",
    "z": "68c0944e7f4deca9",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "[]",
        "tot": "json"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 700,
    "y": 240,
    "wires": [
      [
        "5358a0d2bbfaf7b3"
      ]
    ]
  },
  {
    "id": "5358a0d2bbfaf7b3",
    "type": "link out",
    "z": "68c0944e7f4deca9",
    "name": "link out 49",
    "mode": "link",
    "links": [
      "6d40c15be6021ad7"
    ],
    "x": 825,
    "y": 240,
    "wires": []
  }
]