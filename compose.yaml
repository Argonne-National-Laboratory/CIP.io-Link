services:
  node-red:
    container_name: node-red
    build:
      context: ./build/nr/
      dockerfile: dockerfile${CIPIO_DEV-}
    restart: unless-stopped
    volumes:
      - ./node-red:/data
      - ./node-red/logs:/usr/src/node-red/logs
    ports:
      - ${CIPIO_CSMS_PORT-8884}:${CIPIO_CSMS_PORT-8884}
      - 1880:1880
    environment:
      TZ: ${NODE_RED_TIMEZONE:-America/Chicago}
      NODE_RED_CREDENTIAL_SECRET: ${NODE_RED_CREDENTIAL_SECRET:-false}
      NODE_RED_ENABLE_PROJECTS: false
      DEBUG: "anl:ocpp:*"
      CIPIO_MQTT_USER: ${CIPIO_USER}
      CIPIO_MQTT_PW: ${CIPIO_PW}
      CIPIO_CSMS_PORT: ${CIPIO_CSMS_PORT-8884}
      CIPIO_CSMS_PATH: ${CIPIO_CSMS_PATH:-/ocpp}
      CIPIO_INFLUX_TOKEN: ${CIPIO_INFLUX_TOKEN-TOKENNOTINITIALIZED}
      CIPIO_VALKEY_OPTIONS: >
        {
          "port": 6379,
          "host": "valkey",
          "username": "default",
          "password": "${CIPIO_VALKEY_PASSWORD}"
        }

  valkey:
    container_name: valkey
    image: valkey/valkey
    restart: unless-stopped
    command: ["valkey-server", "/usr/local/etc/valkey/valkey.conf"]
    volumes:
      - ./valkey/config:/usr/local/etc/valkey #location of valkey.conf
      - ./valkey/data:/data # location of persistent data file
    ## ports:
    ## Don't add this to CIPio. For Development only
    ## - 6379:6379

  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: unless-stopped
    profiles:
      - not_now
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  influx2:
    container_name: influx2
    image: influxdb:latest
    restart: unless-stopped
    ports:
      - 8086:8086
    volumes:
      - ./influx2/data:/var/lib/influxdb2
      - ./influx2/config:/etc/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_USERNAME: ${CIPIO_USER-cipio}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${CIPIO_PW-cipio.lnk}
      DOCKER_INFLUXDB_INIT_ORG: ${CIPIO_INFLUX_ORG-cipio}
      DOCKER_INFLUXDB_INIT_BUCKET: ${CIPIO_BUCKET-cipio}

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    profiles:
      - not_now
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana

  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto
    restart: unless-stopped
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log
      - ./mqtt/config:/mosquitto/config

volumes:
  portainer_data:
  grafana_data:
